package net.imagej.slim;

import net.imglib2.RandomAccessibleInterval;
import net.imglib2.type.numeric.integer.IntType;
import net.imglib2.type.numeric.real.FloatType;

/**
 * The collection of all results generated by a single fit of an image. Fields
 * named {@code xxMap} are image representations of the particular attribute.
 * Other fields are not intended to be used by external programs and should be
 * ignored when this object is processed with in the fitting ops.
 * 
 * @author Dasong Gao
 */
public class FitResults {
	public int ltAxis;

	/** The return code of the fit */
	public int retCode;

	/** The image representation of return codes of the fit over the dataset */
	public RandomAccessibleInterval<IntType> retCodeMap;

	/** The fitted parameters of the fit */
	public float[] param;

	/** The image representation of fitted parameters of the fit over the the dataset */
	public RandomAccessibleInterval<FloatType> paramMap;

	/** The fitted transients of the fit */
	public float[] fitted;

	/** The image representation of fitted transients of the fit over the the dataset */
	public RandomAccessibleInterval<FloatType> fittedMap;

	/** The residuals (y - y_fitted) of the fit */
	public float[] residuals;

	/** The image representation of residuals of the fit over the the dataset */
	public RandomAccessibleInterval<FloatType> residualsMap;

	/**
	 * The reduced chi-squared of the fit. For global analysis, this is the
	 * global chi-squared value.
	 */
	public float chisq;

	/** The image representation of reduced chi-squared of the fit over the the dataset */
	public RandomAccessibleInterval<FloatType> chisqMap;

	/**
	 * Create a new instance of {@link FitResults} with shallow copy (maps are
	 * not duplicated).
	 * 
	 * @return A clone of the current instance.
	 */
	public FitResults copy() {
		FitResults newResults = new FitResults();
		newResults.retCode = retCode;
		newResults.retCodeMap = retCodeMap;
		newResults.param = param;
		newResults.paramMap = paramMap;
		newResults.fitted = fitted;
		newResults.fittedMap = fittedMap;
		newResults.residuals = residuals;
		newResults.residualsMap = residualsMap;
		newResults.chisq = chisq;
		newResults.chisqMap = chisqMap;
		return newResults;
	}
}
